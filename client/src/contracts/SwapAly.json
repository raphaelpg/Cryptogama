{
  "contractName": "SwapAly",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountSold",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountBought",
          "type": "uint256"
        }
      ],
      "name": "TokenExchanged",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sellerAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sellerTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountSeller",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "buyerAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "buyerTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountBuyer",
          "type": "uint256"
        }
      ],
      "name": "swapToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountSold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountBought\",\"type\":\"uint256\"}],\"name\":\"TokenExchanged\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sellerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sellerTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountSeller\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyerTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountBuyer\",\"type\":\"uint256\"}],\"name\":\"swapToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Raphael Pinto Gregorio\",\"details\":\"The owner of this contract need to get the approval from both token owners to be able to proceed the swap\",\"methods\":{\"getOwner()\":{\"author\":\"Raphael Pinto Gregorio\",\"details\":\"basic function\",\"return\":\"contract owner address\"},\"swapToken(address,address,uint256,address,address,uint256)\":{\"author\":\"Raphael Pinto Gregorio\",\"details\":\"swap tokens, owner of swap contract need the approval of both token owners, emit an event called TokenExchanged\",\"params\":{\"sellerAddress\":\"the address of the seller, sellerTokenAddress the address of the seller ERC-20, amountSeller the amount the seller wants to exchange, buyerAddress the buyer address, buyerTokenAddress the adress of the buyer ERC-20, amountBuyer the amount to be exchanged\"},\"return\":\"an event TokenExchanged containing the seller address, the buyer address, the amount sold and the amount bought in this order\"}},\"title\":\"Cryptogama swap contract\"},\"userdoc\":{\"methods\":{\"getOwner()\":{\"notice\":\"return contract owner\"},\"swapToken(address,address,uint256,address,address,uint256)\":{\"notice\":\"perform tokens swap between two owners \"}},\"notice\":\"Use this contract to swap ERC-20 tokens\"}},\"settings\":{\"compilationTarget\":{\"/home/bobby/cryptogama10 utils/contracts/SwapAly.sol\":\"SwapAly\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/bobby/cryptogama10 utils/contracts/Context.sol\":{\"keccak256\":\"0xa5ce23dc71caa76caf782712dc8fef8dd2390c277f71e286474e9894d6ece97f\",\"urls\":[\"bzz-raw://cb14fd3bdc804349f070f0a372a2b6819bfe6e1b186080bb4850a1e1d024a16f\",\"dweb:/ipfs/Qmcp5Nhsq3PRRgXQYeqY41FMY1G2YbYC4JCWxFrst24MsC\"]},\"/home/bobby/cryptogama10 utils/contracts/ERC20.sol\":{\"keccak256\":\"0x68b3dae46ab78feb33eab606e93d4933e0d2c27ed8ac8f80503b6456b714b1d4\",\"urls\":[\"bzz-raw://18749cbff0f4df40a5d833063f34eebb259f2fdbda21d9dee4474d7595ae165a\",\"dweb:/ipfs/QmXReKQu8SKMu9G5PRauZ51R8zStLvDo2wWpBucKcyQnp7\"]},\"/home/bobby/cryptogama10 utils/contracts/IERC20.sol\":{\"keccak256\":\"0x694b989b371044e7a6730ce6d4b3da45679b7d5a5ff57cb6d6d84d567add5312\",\"urls\":[\"bzz-raw://529be491ce5d5ff6de81273a85d17fdd0a7e1f50121b7a8b886f3612ad39caa1\",\"dweb:/ipfs/Qmd2KFSZtkSeyUES6z2c2UdZhMQ6AgKLz6DXkqX5ApyfFE\"]},\"/home/bobby/cryptogama10 utils/contracts/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"/home/bobby/cryptogama10 utils/contracts/SwapAly.sol\":{\"keccak256\":\"0x766dc9dff18584e9276c08528a2df356fbb859aa576e76c4bbc8382941cc520e\",\"urls\":[\"bzz-raw://e47efe08e9810dea05d5909fea8dd104cea911dcb99207a6f493d19eece596f5\",\"dweb:/ipfs/QmPMHWPdQjApyvon5eGNiF1sfHQm4Hz1NVDBySuQh5GjcV\"]},\"/home/bobby/cryptogama10 utils/contracts/TokenERC20Aly.sol\":{\"keccak256\":\"0xf5082b18bf4b3491e873d50b495878d77caba78769d9bb82b3c60e0a76cbb1b9\",\"urls\":[\"bzz-raw://68c3a676c3c08ccfd46b8e3be1e7e337290918d16f86e058146116bd5996c859\",\"dweb:/ipfs/QmZwijC5mAqFZNfc1tE3cMHcqLXKAm3eTHZcp75ouwgKYy\"]},\"/home/bobby/cryptogama10 utils/contracts/TokenERC20Dai.sol\":{\"keccak256\":\"0xe182904afe8b130154a85973b845b90017ceb3d88a2f258cfc1c1974cef03eb6\",\"urls\":[\"bzz-raw://41a57014cd3026feb2d8691447f64740b30b3522ac7f8793b06d6412a98dfca3\",\"dweb:/ipfs/QmQ1pF3w3VsuU2h5Bk23hx4cYEeExpJLTJKQ7GUTvfjGV5\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610425806100606000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063893d20e81461003b578063ed563f8e14610085575b600080fd5b610043610155565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61013b600480360360c081101561009b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061017e565b604051808215151515815260200191505060405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008086905060008490508173ffffffffffffffffffffffffffffffffffffffff166323b872dd8a888a6040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561024457600080fd5b505af1158015610258573d6000803e3d6000fd5b505050506040513d602081101561026e57600080fd5b8101908080519060200190929190505050508073ffffffffffffffffffffffffffffffffffffffff166323b872dd878b876040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561033b57600080fd5b505af115801561034f573d6000803e3d6000fd5b505050506040513d602081101561036557600080fd5b8101908080519060200190929190505050508573ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff167f69b4f7d081ba8c7a13dc0ad819546a7aff7bd67d69d55c1824935fce9f26178c8987604051808381526020018281526020019250505060405180910390a35050969550505050505056fea265627a7a72315820911380a65a66bed312a0d3179f3bf6060085c471c797e68689172105c8aaf53264736f6c634300050c0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063893d20e81461003b578063ed563f8e14610085575b600080fd5b610043610155565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61013b600480360360c081101561009b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061017e565b604051808215151515815260200191505060405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008086905060008490508173ffffffffffffffffffffffffffffffffffffffff166323b872dd8a888a6040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561024457600080fd5b505af1158015610258573d6000803e3d6000fd5b505050506040513d602081101561026e57600080fd5b8101908080519060200190929190505050508073ffffffffffffffffffffffffffffffffffffffff166323b872dd878b876040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561033b57600080fd5b505af115801561034f573d6000803e3d6000fd5b505050506040513d602081101561036557600080fd5b8101908080519060200190929190505050508573ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff167f69b4f7d081ba8c7a13dc0ad819546a7aff7bd67d69d55c1824935fce9f26178c8987604051808381526020018281526020019250505060405180910390a35050969550505050505056fea265627a7a72315820911380a65a66bed312a0d3179f3bf6060085c471c797e68689172105c8aaf53264736f6c634300050c0032",
  "sourceMap": "349:1705:5:-;;;549:58;8:9:-1;5:2;;;30:1;27;20:12;5:2;549:58:5;590:10;581:6;;:19;;;;;;;;;;;;;;;;;;349:1705;;;;;;",
  "deployedSourceMap": "349:1705:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;349:1705:5;;;;;;;;;;;;;;;;;;;;;;;;757:80;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1489:563;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1489:563:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;757:80;799:7;824:6;;;;;;;;;;;817:13;;757:80;:::o;1489:563::-;1669:4;1684:23;1724:18;1684:59;;1753:22;1792:17;1753:57;;1821:9;:22;;;1844:13;1859:12;1873;1821:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1821:65:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1821:65:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1821:65:5;;;;;;;;;;;;;;;;;1896:8;:21;;;1918:12;1932:13;1947:11;1896:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1896:63:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1896:63:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1896:63:5;;;;;;;;;;;;;;;;;2005:12;1975:70;;1990:13;1975:70;;;2019:12;2033:11;1975:70;;;;;;;;;;;;;;;;;;;;;;;;1489:563;;;;;;;;;;:::o",
  "source": "pragma solidity 0.5.12;\n\nimport \"./SafeMath.sol\";\nimport \"./TokenERC20Aly.sol\";\nimport \"./TokenERC20Dai.sol\";\n\n/// @title Cryptogama swap contract\n/// @author Raphael Pinto Gregorio\n/// @notice Use this contract to swap ERC-20 tokens\n/// @dev The owner of this contract need to get the approval from both token owners to be able to proceed the swap\ncontract SwapAly{\n    address private _owner;\n    uint256 private _sellerAllowance;\n\n    event TokenExchanged(address indexed from, address indexed to, uint256 amountSold, uint256 amountBought);\n\n    constructor () public {\n        _owner = msg.sender;\n    }\n\n    /// @author Raphael Pinto Gregorio\n    /// @notice return contract owner\n    /// @dev basic function\n    /// @return contract owner address\n    function getOwner() external view returns(address){\n        return _owner;\n    }\n\n    /// @author Raphael Pinto Gregorio\n    /// @notice perform tokens swap between two owners \n    /// @dev swap tokens, owner of swap contract need the approval of both token owners, emit an event called TokenExchanged\n    /// @param sellerAddress the address of the seller, sellerTokenAddress the address of the seller ERC-20, amountSeller the amount the seller wants to exchange, buyerAddress the buyer address, buyerTokenAddress the adress of the buyer ERC-20, amountBuyer the amount to be exchanged\n    /// @return an event TokenExchanged containing the seller address, the buyer address, the amount sold and the amount bought in this order\n    function swapToken(address sellerAddress, address sellerTokenAddress, uint256 amountSeller,  address buyerAddress, address buyerTokenAddress, uint256 amountBuyer) external returns(bool){\n        TokenERC20Aly TokenSell = TokenERC20Aly(sellerTokenAddress);\n        TokenERC20Dai TokenBuy = TokenERC20Dai(buyerTokenAddress);\n\n        TokenSell.transferFrom(sellerAddress, buyerAddress, amountSeller);\n        TokenBuy.transferFrom(buyerAddress, sellerAddress, amountBuyer);\n\n        emit TokenExchanged(sellerAddress, buyerAddress, amountSeller, amountBuyer);\n    }\n}",
  "sourcePath": "/home/bobby/cryptogama10 utils/contracts/SwapAly.sol",
  "ast": {
    "absolutePath": "/home/bobby/cryptogama10 utils/contracts/SwapAly.sol",
    "exportedSymbols": {
      "SwapAly": [
        837
      ]
    },
    "id": 838,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 749,
        "literals": [
          "solidity",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "/home/bobby/cryptogama10 utils/contracts/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 750,
        "nodeType": "ImportDirective",
        "scope": 838,
        "sourceUnit": 748,
        "src": "25:24:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/bobby/cryptogama10 utils/contracts/TokenERC20Aly.sol",
        "file": "./TokenERC20Aly.sol",
        "id": 751,
        "nodeType": "ImportDirective",
        "scope": 838,
        "sourceUnit": 889,
        "src": "50:29:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/bobby/cryptogama10 utils/contracts/TokenERC20Dai.sol",
        "file": "./TokenERC20Dai.sol",
        "id": 752,
        "nodeType": "ImportDirective",
        "scope": 838,
        "sourceUnit": 940,
        "src": "80:29:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Cryptogama swap contract\n @author Raphael Pinto Gregorio\n @notice Use this contract to swap ERC-20 tokens\n @dev The owner of this contract need to get the approval from both token owners to be able to proceed the swap",
        "fullyImplemented": true,
        "id": 837,
        "linearizedBaseContracts": [
          837
        ],
        "name": "SwapAly",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 754,
            "name": "_owner",
            "nodeType": "VariableDeclaration",
            "scope": 837,
            "src": "371:22:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 753,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "371:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 756,
            "name": "_sellerAllowance",
            "nodeType": "VariableDeclaration",
            "scope": 837,
            "src": "399:32:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 755,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "399:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 766,
            "name": "TokenExchanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 765,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 758,
                  "indexed": true,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 766,
                  "src": "459:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 757,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "459:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 760,
                  "indexed": true,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 766,
                  "src": "481:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 759,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "481:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 762,
                  "indexed": false,
                  "name": "amountSold",
                  "nodeType": "VariableDeclaration",
                  "scope": 766,
                  "src": "501:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 761,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "501:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 764,
                  "indexed": false,
                  "name": "amountBought",
                  "nodeType": "VariableDeclaration",
                  "scope": 766,
                  "src": "521:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 763,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "521:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "458:84:5"
            },
            "src": "438:105:5"
          },
          {
            "body": {
              "id": 774,
              "nodeType": "Block",
              "src": "571:36:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 769,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 754,
                      "src": "581:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 770,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 954,
                        "src": "590:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "590:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "581:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 773,
                  "nodeType": "ExpressionStatement",
                  "src": "581:19:5"
                }
              ]
            },
            "documentation": null,
            "id": 775,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 767,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "561:2:5"
            },
            "returnParameters": {
              "id": 768,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "571:0:5"
            },
            "scope": 837,
            "src": "549:58:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 782,
              "nodeType": "Block",
              "src": "807:30:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 780,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 754,
                    "src": "824:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 779,
                  "id": 781,
                  "nodeType": "Return",
                  "src": "817:13:5"
                }
              ]
            },
            "documentation": "@author Raphael Pinto Gregorio\n @notice return contract owner\n @dev basic function\n @return contract owner address",
            "id": 783,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 776,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "774:2:5"
            },
            "returnParameters": {
              "id": 779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 778,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 783,
                  "src": "799:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 777,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "799:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "798:9:5"
            },
            "scope": 837,
            "src": "757:80:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 835,
              "nodeType": "Block",
              "src": "1674:378:5",
              "statements": [
                {
                  "assignments": [
                    801
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 801,
                      "name": "TokenSell",
                      "nodeType": "VariableDeclaration",
                      "scope": 835,
                      "src": "1684:23:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenERC20Aly_$888",
                        "typeString": "contract TokenERC20Aly"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 800,
                        "name": "TokenERC20Aly",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 888,
                        "src": "1684:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenERC20Aly_$888",
                          "typeString": "contract TokenERC20Aly"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 805,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 803,
                        "name": "sellerTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 787,
                        "src": "1724:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 802,
                      "name": "TokenERC20Aly",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 888,
                      "src": "1710:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_TokenERC20Aly_$888_$",
                        "typeString": "type(contract TokenERC20Aly)"
                      }
                    },
                    "id": 804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1710:33:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenERC20Aly_$888",
                      "typeString": "contract TokenERC20Aly"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1684:59:5"
                },
                {
                  "assignments": [
                    807
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 807,
                      "name": "TokenBuy",
                      "nodeType": "VariableDeclaration",
                      "scope": 835,
                      "src": "1753:22:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenERC20Dai_$939",
                        "typeString": "contract TokenERC20Dai"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 806,
                        "name": "TokenERC20Dai",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 939,
                        "src": "1753:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenERC20Dai_$939",
                          "typeString": "contract TokenERC20Dai"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 811,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 809,
                        "name": "buyerTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 793,
                        "src": "1792:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 808,
                      "name": "TokenERC20Dai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 939,
                      "src": "1778:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_TokenERC20Dai_$939_$",
                        "typeString": "type(contract TokenERC20Dai)"
                      }
                    },
                    "id": 810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1778:32:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenERC20Dai_$939",
                      "typeString": "contract TokenERC20Dai"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1753:57:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 815,
                        "name": "sellerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 785,
                        "src": "1844:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 816,
                        "name": "buyerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 791,
                        "src": "1859:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 817,
                        "name": "amountSeller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 789,
                        "src": "1873:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 812,
                        "name": "TokenSell",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 801,
                        "src": "1821:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenERC20Aly_$888",
                          "typeString": "contract TokenERC20Aly"
                        }
                      },
                      "id": 814,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 163,
                      "src": "1821:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1821:65:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 819,
                  "nodeType": "ExpressionStatement",
                  "src": "1821:65:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 823,
                        "name": "buyerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 791,
                        "src": "1918:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 824,
                        "name": "sellerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 785,
                        "src": "1932:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 825,
                        "name": "amountBuyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 795,
                        "src": "1947:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 820,
                        "name": "TokenBuy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 807,
                        "src": "1896:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenERC20Dai_$939",
                          "typeString": "contract TokenERC20Dai"
                        }
                      },
                      "id": 822,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 163,
                      "src": "1896:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1896:63:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 827,
                  "nodeType": "ExpressionStatement",
                  "src": "1896:63:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 829,
                        "name": "sellerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 785,
                        "src": "1990:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 830,
                        "name": "buyerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 791,
                        "src": "2005:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 831,
                        "name": "amountSeller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 789,
                        "src": "2019:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 832,
                        "name": "amountBuyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 795,
                        "src": "2033:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 828,
                      "name": "TokenExchanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 766,
                      "src": "1975:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1975:70:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 834,
                  "nodeType": "EmitStatement",
                  "src": "1970:75:5"
                }
              ]
            },
            "documentation": "@author Raphael Pinto Gregorio\n @notice perform tokens swap between two owners \n @dev swap tokens, owner of swap contract need the approval of both token owners, emit an event called TokenExchanged\n @param sellerAddress the address of the seller, sellerTokenAddress the address of the seller ERC-20, amountSeller the amount the seller wants to exchange, buyerAddress the buyer address, buyerTokenAddress the adress of the buyer ERC-20, amountBuyer the amount to be exchanged\n @return an event TokenExchanged containing the seller address, the buyer address, the amount sold and the amount bought in this order",
            "id": 836,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 785,
                  "name": "sellerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 836,
                  "src": "1508:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 784,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1508:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 787,
                  "name": "sellerTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 836,
                  "src": "1531:26:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 786,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1531:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 789,
                  "name": "amountSeller",
                  "nodeType": "VariableDeclaration",
                  "scope": 836,
                  "src": "1559:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 788,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1559:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 791,
                  "name": "buyerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 836,
                  "src": "1582:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 790,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1582:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 793,
                  "name": "buyerTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 836,
                  "src": "1604:25:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 792,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1604:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 795,
                  "name": "amountBuyer",
                  "nodeType": "VariableDeclaration",
                  "scope": 836,
                  "src": "1631:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 794,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1631:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1507:144:5"
            },
            "returnParameters": {
              "id": 799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 798,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 836,
                  "src": "1669:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 797,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1669:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1668:6:5"
            },
            "scope": 837,
            "src": "1489:563:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 838,
        "src": "349:1705:5"
      }
    ],
    "src": "0:2054:5"
  },
  "legacyAST": {
    "absolutePath": "/home/bobby/cryptogama10 utils/contracts/SwapAly.sol",
    "exportedSymbols": {
      "SwapAly": [
        837
      ]
    },
    "id": 838,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 749,
        "literals": [
          "solidity",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "/home/bobby/cryptogama10 utils/contracts/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 750,
        "nodeType": "ImportDirective",
        "scope": 838,
        "sourceUnit": 748,
        "src": "25:24:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/bobby/cryptogama10 utils/contracts/TokenERC20Aly.sol",
        "file": "./TokenERC20Aly.sol",
        "id": 751,
        "nodeType": "ImportDirective",
        "scope": 838,
        "sourceUnit": 889,
        "src": "50:29:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/bobby/cryptogama10 utils/contracts/TokenERC20Dai.sol",
        "file": "./TokenERC20Dai.sol",
        "id": 752,
        "nodeType": "ImportDirective",
        "scope": 838,
        "sourceUnit": 940,
        "src": "80:29:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Cryptogama swap contract\n @author Raphael Pinto Gregorio\n @notice Use this contract to swap ERC-20 tokens\n @dev The owner of this contract need to get the approval from both token owners to be able to proceed the swap",
        "fullyImplemented": true,
        "id": 837,
        "linearizedBaseContracts": [
          837
        ],
        "name": "SwapAly",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 754,
            "name": "_owner",
            "nodeType": "VariableDeclaration",
            "scope": 837,
            "src": "371:22:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 753,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "371:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 756,
            "name": "_sellerAllowance",
            "nodeType": "VariableDeclaration",
            "scope": 837,
            "src": "399:32:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 755,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "399:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 766,
            "name": "TokenExchanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 765,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 758,
                  "indexed": true,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 766,
                  "src": "459:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 757,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "459:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 760,
                  "indexed": true,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 766,
                  "src": "481:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 759,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "481:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 762,
                  "indexed": false,
                  "name": "amountSold",
                  "nodeType": "VariableDeclaration",
                  "scope": 766,
                  "src": "501:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 761,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "501:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 764,
                  "indexed": false,
                  "name": "amountBought",
                  "nodeType": "VariableDeclaration",
                  "scope": 766,
                  "src": "521:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 763,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "521:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "458:84:5"
            },
            "src": "438:105:5"
          },
          {
            "body": {
              "id": 774,
              "nodeType": "Block",
              "src": "571:36:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 769,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 754,
                      "src": "581:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 770,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 954,
                        "src": "590:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "590:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "581:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 773,
                  "nodeType": "ExpressionStatement",
                  "src": "581:19:5"
                }
              ]
            },
            "documentation": null,
            "id": 775,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 767,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "561:2:5"
            },
            "returnParameters": {
              "id": 768,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "571:0:5"
            },
            "scope": 837,
            "src": "549:58:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 782,
              "nodeType": "Block",
              "src": "807:30:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 780,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 754,
                    "src": "824:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 779,
                  "id": 781,
                  "nodeType": "Return",
                  "src": "817:13:5"
                }
              ]
            },
            "documentation": "@author Raphael Pinto Gregorio\n @notice return contract owner\n @dev basic function\n @return contract owner address",
            "id": 783,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 776,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "774:2:5"
            },
            "returnParameters": {
              "id": 779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 778,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 783,
                  "src": "799:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 777,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "799:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "798:9:5"
            },
            "scope": 837,
            "src": "757:80:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 835,
              "nodeType": "Block",
              "src": "1674:378:5",
              "statements": [
                {
                  "assignments": [
                    801
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 801,
                      "name": "TokenSell",
                      "nodeType": "VariableDeclaration",
                      "scope": 835,
                      "src": "1684:23:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenERC20Aly_$888",
                        "typeString": "contract TokenERC20Aly"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 800,
                        "name": "TokenERC20Aly",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 888,
                        "src": "1684:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenERC20Aly_$888",
                          "typeString": "contract TokenERC20Aly"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 805,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 803,
                        "name": "sellerTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 787,
                        "src": "1724:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 802,
                      "name": "TokenERC20Aly",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 888,
                      "src": "1710:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_TokenERC20Aly_$888_$",
                        "typeString": "type(contract TokenERC20Aly)"
                      }
                    },
                    "id": 804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1710:33:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenERC20Aly_$888",
                      "typeString": "contract TokenERC20Aly"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1684:59:5"
                },
                {
                  "assignments": [
                    807
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 807,
                      "name": "TokenBuy",
                      "nodeType": "VariableDeclaration",
                      "scope": 835,
                      "src": "1753:22:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenERC20Dai_$939",
                        "typeString": "contract TokenERC20Dai"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 806,
                        "name": "TokenERC20Dai",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 939,
                        "src": "1753:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenERC20Dai_$939",
                          "typeString": "contract TokenERC20Dai"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 811,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 809,
                        "name": "buyerTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 793,
                        "src": "1792:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 808,
                      "name": "TokenERC20Dai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 939,
                      "src": "1778:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_TokenERC20Dai_$939_$",
                        "typeString": "type(contract TokenERC20Dai)"
                      }
                    },
                    "id": 810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1778:32:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenERC20Dai_$939",
                      "typeString": "contract TokenERC20Dai"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1753:57:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 815,
                        "name": "sellerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 785,
                        "src": "1844:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 816,
                        "name": "buyerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 791,
                        "src": "1859:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 817,
                        "name": "amountSeller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 789,
                        "src": "1873:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 812,
                        "name": "TokenSell",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 801,
                        "src": "1821:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenERC20Aly_$888",
                          "typeString": "contract TokenERC20Aly"
                        }
                      },
                      "id": 814,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 163,
                      "src": "1821:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1821:65:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 819,
                  "nodeType": "ExpressionStatement",
                  "src": "1821:65:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 823,
                        "name": "buyerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 791,
                        "src": "1918:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 824,
                        "name": "sellerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 785,
                        "src": "1932:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 825,
                        "name": "amountBuyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 795,
                        "src": "1947:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 820,
                        "name": "TokenBuy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 807,
                        "src": "1896:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenERC20Dai_$939",
                          "typeString": "contract TokenERC20Dai"
                        }
                      },
                      "id": 822,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 163,
                      "src": "1896:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1896:63:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 827,
                  "nodeType": "ExpressionStatement",
                  "src": "1896:63:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 829,
                        "name": "sellerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 785,
                        "src": "1990:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 830,
                        "name": "buyerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 791,
                        "src": "2005:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 831,
                        "name": "amountSeller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 789,
                        "src": "2019:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 832,
                        "name": "amountBuyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 795,
                        "src": "2033:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 828,
                      "name": "TokenExchanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 766,
                      "src": "1975:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1975:70:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 834,
                  "nodeType": "EmitStatement",
                  "src": "1970:75:5"
                }
              ]
            },
            "documentation": "@author Raphael Pinto Gregorio\n @notice perform tokens swap between two owners \n @dev swap tokens, owner of swap contract need the approval of both token owners, emit an event called TokenExchanged\n @param sellerAddress the address of the seller, sellerTokenAddress the address of the seller ERC-20, amountSeller the amount the seller wants to exchange, buyerAddress the buyer address, buyerTokenAddress the adress of the buyer ERC-20, amountBuyer the amount to be exchanged\n @return an event TokenExchanged containing the seller address, the buyer address, the amount sold and the amount bought in this order",
            "id": 836,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 785,
                  "name": "sellerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 836,
                  "src": "1508:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 784,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1508:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 787,
                  "name": "sellerTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 836,
                  "src": "1531:26:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 786,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1531:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 789,
                  "name": "amountSeller",
                  "nodeType": "VariableDeclaration",
                  "scope": 836,
                  "src": "1559:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 788,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1559:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 791,
                  "name": "buyerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 836,
                  "src": "1582:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 790,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1582:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 793,
                  "name": "buyerTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 836,
                  "src": "1604:25:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 792,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1604:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 795,
                  "name": "amountBuyer",
                  "nodeType": "VariableDeclaration",
                  "scope": 836,
                  "src": "1631:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 794,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1631:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1507:144:5"
            },
            "returnParameters": {
              "id": 799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 798,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 836,
                  "src": "1669:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 797,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1669:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1668:6:5"
            },
            "scope": 837,
            "src": "1489:563:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 838,
        "src": "349:1705:5"
      }
    ],
    "src": "0:2054:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0xa70c823abd164a0d3d905781ca61f90c6ee9847ce3123984c55ecd3c056d43a4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "AlySold",
          "type": "event",
          "signature": "0xa70c823abd164a0d3d905781ca61f90c6ee9847ce3123984c55ecd3c056d43a4"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0xd4cffd6979677853b45a7a17f455188a434e975ba474c5a2613c94beacea537a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "TokenSold",
          "type": "event",
          "signature": "0xd4cffd6979677853b45a7a17f455188a434e975ba474c5a2613c94beacea537a"
        },
        "0x69b4f7d081ba8c7a13dc0ad819546a7aff7bd67d69d55c1824935fce9f26178c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amountSold",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amountBought",
              "type": "uint256"
            }
          ],
          "name": "TokenExchanged",
          "type": "event",
          "signature": "0x69b4f7d081ba8c7a13dc0ad819546a7aff7bd67d69d55c1824935fce9f26178c"
        }
      },
      "links": {},
      "address": "0x90E57c3fc459D81127a95c064538C14E953b0083",
      "transactionHash": "0x7e0e928eccb5a192a87f89c4c70a2708fbb658238368f7f819137223e4337b92"
    }
  },
  "schemaVersion": "3.0.19",
  "updatedAt": "2020-02-03T14:23:33.025Z",
  "devdoc": {
    "author": "Raphael Pinto Gregorio",
    "details": "The owner of this contract need to get the approval from both token owners to be able to proceed the swap",
    "methods": {
      "getOwner()": {
        "author": "Raphael Pinto Gregorio",
        "details": "basic function",
        "return": "contract owner address"
      },
      "swapToken(address,address,uint256,address,address,uint256)": {
        "author": "Raphael Pinto Gregorio",
        "details": "swap tokens, owner of swap contract need the approval of both token owners, emit an event called TokenExchanged",
        "params": {
          "sellerAddress": "the address of the seller, sellerTokenAddress the address of the seller ERC-20, amountSeller the amount the seller wants to exchange, buyerAddress the buyer address, buyerTokenAddress the adress of the buyer ERC-20, amountBuyer the amount to be exchanged"
        },
        "return": "an event TokenExchanged containing the seller address, the buyer address, the amount sold and the amount bought in this order"
      }
    },
    "title": "Cryptogama swap contract"
  },
  "userdoc": {
    "methods": {
      "getOwner()": {
        "notice": "return contract owner"
      },
      "swapToken(address,address,uint256,address,address,uint256)": {
        "notice": "perform tokens swap between two owners "
      }
    },
    "notice": "Use this contract to swap ERC-20 tokens"
  }
}